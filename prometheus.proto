// Copyright 2016 The Prometheus Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package prompb;

message Sample {
  double value    = 1;
  int64  timestamp = 2;
}

// TimeSeries represents a single time series.
message TimeSeries {
  repeated Label  labels  = 1;
  repeated Sample samples = 2;
}

message Label {
  string name  = 1;
  string value = 2;
}

message Labels {
  repeated Label labels = 1;
}

// Matcher specifies a rule, which can match or not match a time series.
message Matcher {
  enum Type {
    EQ  = 0;
    NEQ = 1;
    RE  = 2;
    NRE = 3;
  }
  Type   type  = 1;
  string name  = 2;
  string value = 3;
}

message ReadHints {
  int64  step_ms      = 1; // Query step size in milliseconds.
  string func         = 2; // Function name.
  int64  start_ms     = 3; // Start time in milliseconds.
  int64  end_ms       = 4; // End time in milliseconds.
  repeated string grouping = 5; // List of label names used for grouping.
  bool   by           = 6; // Whether to drop labels in grouping.
  int64  range_ms     = 7; // Range vector selector range in milliseconds.
}

// WriteRequest represents a remote write request.
message WriteRequest {
  repeated TimeSeries timeseries = 1;
}

// ReadRequest represents a remote read request.
message ReadRequest {
  repeated Query queries = 1;
}

// ReadResponse represents a remote read response.
message ReadResponse {
  // In case of error, results is empty and details are provided in the error message.
  repeated QueryResult results = 1;
}

// Query represents a single query in a remote read request.
message Query {
  int64              start_timestamp_ms = 1;
  int64              end_timestamp_ms   = 2;
  repeated Matcher   matchers           = 3;
  ReadHints          hints              = 4;
}

// QueryResult represents a single result for a query in a remote read response.
message QueryResult {
  // Samples within a time series are ordered by time.
  repeated TimeSeries timeseries = 1;
}

